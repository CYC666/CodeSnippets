<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string></string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>All</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>
    // MARK:上传图片
    func uploadDatas(_ image: UIImage,
                     successBack: @escaping (_ respond: JSON) -&gt; (),
                     falseBack: @escaping () -&gt; ()) {
        
        // 签名
        let equip_uuid: String = getUUID()
        var nonce = String()
        while nonce.count != 8 {
            nonce = String.init(format: "%ld", arc4random() % 100000000)
        }
        let time: String = String.init(format: "%.0f000", Date.init().timeIntervalSince1970)
        let originText = String.init(format: "equip_uuid=%@&amp;nonce=%@&amp;time=%@", equip_uuid, nonce, time)
        let signText = originText.hmac(algorithm: .MD5, key: kPrivateKey)
        
        // 请求参数
        let path = String.init(format: "%@%@", kURL, "upload/v1/image/file/upload")
        var dic = [String : String]()
        dic["equip_uuid"] = equip_uuid
        dic["nonce"] = nonce
        dic["time"] = time
        dic["sign"] = signText
        
        // Header
        var header: HTTPHeaders = [:]
        if let token = UserDefaults.standard.value(forKey: kToken) {
            header["TOKEN"] = (token as! String)
        }
        
        var data = image.jpegData(compressionQuality: 0.5)
        if data!.count &gt; 2*1024*1024 {
            data = image.jpegData(compressionQuality: 0.2)
        }
        
        AF.upload(multipartFormData: { (multipartFormData) in
            
            // 参数
            for p in dic {
                multipartFormData.append(p.value.data(using: .utf8)!, withName: p.key)
            }
            
            // 数据
            let date = Date.init(timeIntervalSince1970: 0)
            let format = DateFormatter.init()
            format.dateFormat = "yyyyMMddHHmmss"
            let dateText = format.string(from: date) + ".png"
            print(dateText)
            multipartFormData.append(data!, withName: "file", fileName: dateText, mimeType: "image/png")
            
        }, to: path, headers: header).responseJSON { responseJson in
            
            if responseJson.value != nil {
                successBack(JSON(responseJson.value as Any))
            } else {
                falseBack()
            }
            
            // 每次请求后打印数据到控制台
            print("😍😍😍😍😍😍😍😍😍😍😍😍😍😍😍😍😍😍😍😍😍😍😍😍😍")
            print("请求地址:")
            print(path)
            print("请求参数:")
            print(dic)
            print("响应数据:")
            print(JSON(responseJson.value as Any))
            
        }
        
    }</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>04CE5A97-C67D-4628-A3E0-91863F424823</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Swift</string>
	<key>IDECodeSnippetSummary</key>
	<string></string>
	<key>IDECodeSnippetTitle</key>
	<string>Swift上传图片网络请求</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>2</integer>
</dict>
</plist>
